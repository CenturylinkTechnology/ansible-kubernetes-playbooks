- hosts: all
  tasks:
  
  - name: Publish kube cluster event.
    kube_cluster_event:
      authorization: "{{ authorization }}"
      account_alias: "{{ account_alias }}"
      cluster_id: "{{ cluster_id }}"
      message: "Starting {{ application_name }} deployment."
  
  - name: Create mysql Replication Controller.
    kubernetes:
      endpoint: "{{ apiserver_endpoint }}"
      state: present
      model:
        apiVersion: v1
        kind: ReplicationController
        metadata:
          name: "{{ application_name }}-rc"
          namespace: default
        spec:
          replicas: 1
          imagePullPolicy: IfNotPresent
          selector:
            app: "{{ application_name }}"
          template:
            metadata:
              labels:
                app: "{{ application_name }}"
            spec:
              containers:
              - name: "mysql"
                image: mysql
                env:
                - name: MYSQL_ROOT_PASSWORD
                  value: password
                ports:
                - containerPort: 3306
            restartPolicy: Always

  - name: Publish kube cluster event.
    kube_cluster_event:
      authorization: "{{ authorization }}"
      account_alias: "{{ account_alias }}"
      cluster_id: "{{ cluster_id }}"
      message: "{{ application_name }} replication controller created."

  - name: Create mysql Service
    kubernetes:
      endpoint: "{{ apiserver_endpoint }}"
      state: present
      model:
        apiVersion: v1
        kind: Service
        metadata:
          name: "{{ application_name }}-svc"
          namespace: default
          labels:
            app: "{{ application_name }}"
        spec:
          type: NodePort
          ports:
          - port: 3306
            targetPort: 3306
            protocol: TCP
            nodePort: 30306
          selector:
            app: "{{ application_name }}"
    register: service_resp
            
  - debug: msg={{ service_resp }}
            
  - name: Publish kube cluster event.
    kube_cluster_event:
      authorization: "{{ authorization }}"
      account_alias: "{{ account_alias }}"
      cluster_id: "{{ cluster_id }}"
      message: "{{ application_name }} service created."