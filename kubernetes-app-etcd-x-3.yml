- hosts: all
  tasks:
  - name: Update the stored cluster app configuration.
    kube_cluster_app_patch:
      endpoint: "{{ services_endpoint }}"
      authorization: "{{ authorization }}"
      account_alias: "{{ account_alias }}"
      cluster_id: "{{ cluster_id }}"
      cluster_app_id: "{{ cluster_app_id }}"
      patch:
        state: "installing"  
      
  - name: Create etcd node-1 Service
    kubernetes:
      endpoint: "{{ apiserver_endpoint }}"
      state: present
      model:
        apiVersion: v1
        kind: Service
        metadata:
          name: "{{ application_name }}-node-1"
          namespace: default
          labels:
            app: "{{ application_name }}"
        spec:
          ports:
          - name: client
            port: 4001
            targetPort: 4001
            protocol: TCP
          - name: peer
            port: 2380
            targetPort: 2380
            protocol: TCP
          - name: other
            port: 2379
            targetPort: 2379
            protocol: TCP
          selector:
            node: "{{ application_name }}-node-1"
    register: service_resp_n1
    
  - name: Create etcd node-2 Service
    kubernetes:
      endpoint: "{{ apiserver_endpoint }}"
      state: present
      model:
        apiVersion: v1
        kind: Service
        metadata:
          name: "{{ application_name }}-node-2"
          namespace: default
          labels:
            app: "{{ application_name }}"
        spec:
          ports:
          - name: client
            port: 4001
            targetPort: 4001
            protocol: TCP
          - name: peer
            port: 2380
            targetPort: 2380
            protocol: TCP
          - name: other
            port: 2379
            targetPort: 2379
            protocol: TCP
          selector:
            node: "{{ application_name }}-node-2"
    register: service_resp_n2
    
  - name: Create etcd node-3 Service
    kubernetes:
      endpoint: "{{ apiserver_endpoint }}"
      state: present
      model:
        apiVersion: v1
        kind: Service
        metadata:
          name: "{{ application_name }}-node-3"
          namespace: default
          labels:
            app: "{{ application_name }}"
        spec:
          ports:
          - name: client
            port: 4001
            targetPort: 4001
            protocol: TCP
          - name: peer
            port: 2380
            targetPort: 2380
            protocol: TCP
          - name: other
            port: 2379
            targetPort: 2379
            protocol: TCP
          selector:
            node: "{{ application_name }}-node-3"
    register: service_resp_n3
  
  - name: Create etcd node-1 Replication Controller.
    kubernetes:
      endpoint: "{{ apiserver_endpoint }}"
      state: present
      model:
        apiVersion: v1
        kind: ReplicationController
        metadata:
          name: "{{ application_name }}-node-1-rc"
          namespace: default
        spec:
          replicas: 1
          imagePullPolicy: IfNotPresent
          selector:
            node: "{{ application_name }}-node-1"
          template:
            metadata:
              labels:
                app: "{{ application_name }}"
                node: "{{ application_name }}-node-1"
            spec:
              containers:
              - name: "etcd-node-1"
                image: quay.io/coreos/etcd:v2.2.2
                ports:
                - containerPort: 4001
                - containerPort: 2380
                - containerPort: 2379
                args:
                - -name 
                - "{{ application_name }}-node-1"
                - -listen-client-urls
                - http://0.0.0.0:2379,http://0.0.0.0:4001
                - -advertise-client-urls 
                - http://{{ service_resp_n1.content.spec.clusterIP}}:2379,http://{{ service_resp_n1.content.spec.clusterIP}}:4001
                - -initial-advertise-peer-urls 
                - http://{{ service_resp_n1.content.spec.clusterIP}}:2380
                - -listen-peer-urls
                - http://0.0.0.0:2380
                - -initial-cluster-token 
                - "{{ application_name }}-cluster"
                - -initial-cluster 
                - "{{ application_name }}-node-1=http://{{ service_resp_n1.content.spec.clusterIP}}:2380,{{ application_name }}-node-2=http://{{ service_resp_n2.content.spec.clusterIP}}:2380,{{ application_name }}-node-3=http://{{ service_resp_n3.content.spec.clusterIP}}:2380"
                - -initial-cluster-state
                - new
            restartPolicy: Always

  - name: Create etcd node-2 Replication Controller.
    kubernetes:
      endpoint: "{{ apiserver_endpoint }}"
      state: present
      model:
        apiVersion: v1
        kind: ReplicationController
        metadata:
          name: "{{ application_name }}-node-2-rc"
          namespace: default
        spec:
          replicas: 1
          imagePullPolicy: IfNotPresent
          selector:
            node: "{{ application_name }}-node-2"
          template:
            metadata:
              labels:
                app: "{{ application_name }}"
                node: "{{ application_name }}-node-2"
            spec:
              containers:
              - name: "etcd-node-2"
                image: quay.io/coreos/etcd:v2.2.2
                ports:
                - containerPort: 4001
                - containerPort: 2380
                - containerPort: 2379
                args:
                - -name 
                - "{{ application_name }}-node-2"
                - -listen-client-urls
                - http://0.0.0.0:2379,http://0.0.0.0:4001
                - -advertise-client-urls 
                - http://{{ service_resp_n2.content.spec.clusterIP}}:2379,http://{{ service_resp_n2.content.spec.clusterIP}}:4001
                - -initial-advertise-peer-urls 
                - http://{{ service_resp_n2.content.spec.clusterIP}}:2380
                - -listen-peer-urls
                - http://0.0.0.0:2380
                - -initial-cluster-token 
                - "{{ application_name }}-cluster"
                - -initial-cluster 
                - "{{ application_name }}-node-1=http://{{ service_resp_n1.content.spec.clusterIP}}:2380,{{ application_name }}-node-2=http://{{ service_resp_n2.content.spec.clusterIP}}:2380,{{ application_name }}-node-3=http://{{ service_resp_n3.content.spec.clusterIP}}:2380"
                - -initial-cluster-state
                - new
            restartPolicy: Always
            
  - name: Create etcd node-3 Replication Controller.
    kubernetes:
      endpoint: "{{ apiserver_endpoint }}"
      state: present
      model:
        apiVersion: v1
        kind: ReplicationController
        metadata:
          name: "{{ application_name }}-node-3-rc"
          namespace: default
        spec:
          replicas: 1
          imagePullPolicy: IfNotPresent
          selector:
            node: "{{ application_name }}-node-3"
          template:
            metadata:
              labels:
                app: "{{ application_name }}"
                node: "{{ application_name }}-node-3"
            spec:
              containers:
              - name: "etcd-node-3"
                image: quay.io/coreos/etcd:v2.2.2
                ports:
                - containerPort: 4001
                - containerPort: 2380
                - containerPort: 2379
                args:
                - -name 
                - "{{ application_name }}-node-3"
                - -listen-client-urls
                - http://0.0.0.0:2379,http://0.0.0.0:4001
                - -advertise-client-urls 
                - http://{{ service_resp_n3.content.spec.clusterIP}}:2379,http://{{ service_resp_n3.content.spec.clusterIP}}:4001
                - -initial-advertise-peer-urls 
                - http://{{ service_resp_n3.content.spec.clusterIP}}:2380
                - -listen-peer-urls
                - http://0.0.0.0:2380
                - -initial-cluster-token 
                - "{{ application_name }}-cluster"
                - -initial-cluster 
                - "{{ application_name }}-node-1=http://{{ service_resp_n1.content.spec.clusterIP}}:2380,{{ application_name }}-node-2=http://{{ service_resp_n2.content.spec.clusterIP}}:2380,{{ application_name }}-node-3=http://{{ service_resp_n3.content.spec.clusterIP}}:2380"
                - -initial-cluster-state
                - new
            restartPolicy: Always      

  - name: Create etcd Service
    kubernetes:
      endpoint: "{{ apiserver_endpoint }}"
      state: present
      model:
        apiVersion: v1
        kind: Service
        metadata:
          name: "{{ application_name }}"
          namespace: default
          labels:
            app: "{{ application_name }}"
        spec:
          type: NodePort
          ports:
          - port: 4001
            targetPort: 4001
            protocol: TCP
          selector:
            app: "{{ application_name }}"
    register: service_resp

  - name: Update the stored cluster app configuration.
    kube_cluster_app_patch:
      endpoint: "{{ services_endpoint }}"
      authorization: "{{ authorization }}"
      account_alias: "{{ account_alias }}"
      cluster_id: "{{ cluster_id }}"
      cluster_app_id: "{{ cluster_app_id }}"
      patch:
        port: "{{ service_resp.content.spec.ports[0].nodePort }}"
        state: "ready" 
