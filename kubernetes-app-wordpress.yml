- hosts: all
  tasks:
  
#  - name: Publish kube cluster event.
#    kube_cluster_event:
#      authorization: "{{ authorization }}"
#      account_alias: "{{ account_alias }}"
#      cluster_id: "{{ cluster_id }}"
#      message: "Starting {{ application_name }} deployment."
  
  - name: Create Wordpress Replication Controller.
    kubernetes:
      endpoint: "{{ apiserver_endpoint }}"
      state: present
      model:
        apiVersion: v1
        kind: ReplicationController
        metadata:
          name: "{{ application_name }}-rc"
          namespace: default
        spec:
          replicas: 1
          imagePullPolicy: IfNotPresent
          selector:
            app: "{{ application_name }}"
          template:
            metadata:
              labels:
                app: "{{ application_name }}"
            spec:
              containers:
              - name: "mariadb"
                image: mariadb:5
                env:
                - name: MYSQL_ROOT_PASSWORD
                  value: password
                ports:
                - containerPort: 3306
              - name: "wordpress"
                image: wordpress
                env:
                - name: WORDPRESS_DB_HOST
                  value: 127.0.0.1
                - name: WORDPRESS_DB_PASSWORD
                  value: password
                ports:
                - containerPort: 80
            restartPolicy: Always
            
#  - name: Publish kube cluster event.
#    kube_cluster_event:
#      authorization: "{{ authorization }}"
#      account_alias: "{{ account_alias }}"
#      cluster_id: "{{ cluster_id }}"
#      message: "{{ application_name }} replication controller created."
            
  - name: Create Wordpress Service
    kubernetes:
      endpoint: "{{ apiserver_endpoint }}"
      state: present
      model:
        apiVersion: v1
        kind: Service
        metadata:
          name: "{{ application_name }}-svc"
          namespace: default
          labels:
            app: "{{ application_name }}"
        spec:
          type: NodePort
          ports:
          - port: 8080
            targetPort: 80
            protocol: TCP
          selector:
            app: "{{ application_name }}"
    register: service_resp
            
  - debug: msg={{ service_resp }}
            
#  - name: Publish kube cluster event.
#    kube_cluster_event:
#      authorization: "{{ authorization }}"
#      account_alias: "{{ account_alias }}"
#      cluster_id: "{{ cluster_id }}"
#      message: "{{ application_name }} service created."